# general settings
name: train_EIMNNetx2_Baidu
model_type: SRModel
scale: 1
num_gpu: 1  # auto: can infer from your visible devices automatically. official: 4 GPUs
manual_seed: 3407

# dataset and data loader settings
datasets:
  train:
    name: Baidu
    type: PairedImageDataset
    dataroot_gt: /media/sr6/datasets/Misc/Baidu/gt_p480_s240
    dataroot_lq: /media/sr6/datasets/Misc/Baidu/lq_p480_s240
    # gt_suffix: ~
    # meta_info: datasets/DF2K/meta_info/meta_info_DF2Kmultiscale+OST_sub.txt
    io_backend:
      type: disk

    gt_size: 64
    use_hflip: True
    use_rot: True  # False

    # data loader
    num_worker_per_gpu: 5
    batch_size_per_gpu: 16
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

    # Uncomment these for validation
#    val:
#      name: validation
#      type: PairedImageDataset
#      dataroot_gt: datasets/SR/Benchmark/Set5/GTmod12
#      dataroot_lq: datasets/SR/Benchmark/Set5/LRbicx2
#      io_backend:
#        type: disk

# network structures
network_g:
  type: EIMNBaidu
  num_stages: 16  # L 16 | A 14
  scale: 1
  weight_path: ~

# path
path:
  pretrain_network_g: ~
  param_key_g: params_ema
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 5e-4
    weight_decay: 0
    betas: [ 0.9, 0.99 ]

  scheduler:
    #    type: MultiStepLR
    #    milestones: [ 300000, 400000, 450000, 480000 ]
    #    gamma: 0.5
    type: CosineAnnealingRestartLR
#    periods: [ 250000, 500000, 750000, 1000000, 1250000, 1500000, 1750000, 2000000 ]
    periods: [ 125000, 250000, 375000, 500000, 625000, 750000, 875000, 1000000 ]
    restart_weights: [ 1, 1, 1, 0.6, 0.6, 0.2, 0.2, 0.1 ]

  total_iter: 1000000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

  # Uncomment these for validation
  # validation settings
#  val:
#    val_freq: !!float 1e3
#    save_img: False
#
#    metrics:
#      psnr: # metric name
#        type: calculate_psnr
#        crop_border: 0
#        test_y_channel: True

# logging settings
logger:
  print_freq: 1000
  save_checkpoint_freq: !!float 1e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
#dist_params:
#  backend: nccl
#  port: 29500
